{"ast":null,"code":"import { GET_COUNTRIES, GET_COUNTRY, SEARCH_COUNTRIES, DELETE_COUNTRY, SET_CONTINENT } from '../actions/actions-countries';\nimport countriesData from '../data/countries.json';\nvar initialState = //[]; generujemy pustą tablicę\n{\n  countries: countriesData,\n  selectedCountry: {},\n  visibleCountries: countriesData\n};\n\nvar countriesReducer = function countriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRIES:\n      //return countriesData; //to z importu czyli cała ta tablica\n      return Object.assign({}, state, {\n        countries: state.countries\n      });\n\n    case GET_COUNTRY:\n      var selectedCountry = state.countries.find(function (country) {\n        return country.id === parseInt(action.id, 10);\n      });\n      return Object.assign({}, state, {\n        selectedCountry: selectedCountry\n      });\n\n    case SEARCH_COUNTRIES:\n      var foundCountries = state.countries.filter(function (country) {\n        return country.name.toLowerCase().includes(action.searchText.toLowerCase());\n      });\n      return Object.assign({}, state, {\n        visibleCountries: foundCountries\n      });\n\n    case DELETE_COUNTRY:\n      var notDeletedCountries = state.countries.filter(function (country) {\n        return country.id !== action.id;\n      });\n      var notDeletedVisibleCountries = state.visibleCountries.filter(function (country) {\n        return country.id !== action.id;\n      });\n      return Object.assign({}, state, {\n        countries: notDeletedCountries,\n        visibleCountries: notDeletedVisibleCountries\n      });\n\n    case SET_CONTINENT:\n      var continentCountries = state.countries.filter(function (country) {\n        return country.continent === action.name;\n      });\n      return Object.assign({}, state, {\n        visibleCountries: continentCountries\n      });\n\n    default:\n      return state;\n  } // return state;\n\n};\n\nexport default countriesReducer;","map":{"version":3,"sources":["/Users/aleksandra/Programming/React.js-router/src/reducers/countries-reducer.js"],"names":["GET_COUNTRIES","GET_COUNTRY","SEARCH_COUNTRIES","DELETE_COUNTRY","SET_CONTINENT","countriesData","initialState","countries","selectedCountry","visibleCountries","countriesReducer","state","action","type","Object","assign","find","country","id","parseInt","foundCountries","filter","name","toLowerCase","includes","searchText","notDeletedCountries","notDeletedVisibleCountries","continentCountries","continent"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,gBAArC,EAAuDC,cAAvD,EAAuEC,aAAvE,QAA4F,8BAA5F;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,IAAMC,YAAY,GAClB;AACI;AACIC,EAAAA,SAAS,EAAEF,aADf;AAEIG,EAAAA,eAAe,EAAE,EAFrB;AAGIC,EAAAA,gBAAgB,EAAEJ;AAHtB,CAFJ;;AAQA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAwC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,aAAL;AACI;AACA,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACJ,QAAAA,SAAS,EAAEI,KAAK,CAACJ;AAAlB,OAAzB,CAAP;;AAEJ,SAAKN,WAAL;AACI,UAAMO,eAAe,GAAGG,KAAK,CAACJ,SAAN,CAAgBS,IAAhB,CAAqB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAaC,QAAQ,CAACP,MAAM,CAACM,EAAR,EAAY,EAAZ,CAAzB;AAAA,OAA5B,CAAxB;AACA,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACH,QAAAA,eAAe,EAAfA;AAAD,OAAzB,CAAP;;AAEJ,SAAKN,gBAAL;AACI,UAAMkB,cAAc,GAAGT,KAAK,CAACJ,SAAN,CAAgBc,MAAhB,CAAuB,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACK,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,MAAM,CAACa,UAAP,CAAkBF,WAAlB,EAApC,CAAJ;AAAA,OAA9B,CAAvB;AACA,aAAOT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,gBAAgB,EAAEW;AAAnB,OAAzB,CAAP;;AAEJ,SAAKjB,cAAL;AACI,UAAMuB,mBAAmB,GAAGf,KAAK,CAACJ,SAAN,CAAgBc,MAAhB,CAAuB,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACM,EAA1B;AAAA,OAA9B,CAA5B;AACA,UAAMS,0BAA0B,GAAGhB,KAAK,CAACF,gBAAN,CAAuBY,MAAvB,CAA8B,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACM,EAA1B;AAAA,OAArC,CAAnC;AACA,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACJ,QAAAA,SAAS,EAAEmB,mBAAZ;AAAiCjB,QAAAA,gBAAgB,EAAEkB;AAAnD,OAAzB,CAAP;;AAEJ,SAAKvB,aAAL;AACI,UAAMwB,kBAAkB,GAAGjB,KAAK,CAACJ,SAAN,CAAgBc,MAAhB,CAAuB,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACY,SAAR,KAAsBjB,MAAM,CAACU,IAAjC;AAAA,OAA9B,CAA3B;AACA,aAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,gBAAgB,EAAEmB;AAAnB,OAAzB,CAAP;;AAEJ;AACI,aAAOjB,KAAP;AAvBR,GAD6D,CA0B7D;;AACH,CA3BD;;AA6BA,eAAeD,gBAAf","sourcesContent":["import { GET_COUNTRIES, GET_COUNTRY, SEARCH_COUNTRIES, DELETE_COUNTRY, SET_CONTINENT } from '../actions/actions-countries';\nimport countriesData from '../data/countries.json';\n\nconst initialState = \n//[]; generujemy pustą tablicę\n    {\n        countries: countriesData,\n        selectedCountry: {},\n        visibleCountries: countriesData\n    };\n\nconst countriesReducer = function (state = initialState, action) {\n    switch (action.type) {\n        case GET_COUNTRIES:\n            //return countriesData; //to z importu czyli cała ta tablica\n            return Object.assign({}, state, {countries: state.countries});\n        \n        case GET_COUNTRY:\n            const selectedCountry = state.countries.find(country => country.id===parseInt(action.id, 10));\n            return Object.assign({}, state, {selectedCountry});\n\n        case SEARCH_COUNTRIES:\n            const foundCountries = state.countries.filter(country => country.name.toLowerCase().includes(action.searchText.toLowerCase()));\n            return Object.assign({}, state, {visibleCountries: foundCountries});\n            \n        case DELETE_COUNTRY:\n            const notDeletedCountries = state.countries.filter(country => country.id !== action.id);\n            const notDeletedVisibleCountries = state.visibleCountries.filter(country => country.id !== action.id);\n            return Object.assign({}, state, {countries: notDeletedCountries, visibleCountries: notDeletedVisibleCountries});\n\n        case SET_CONTINENT:\n            const continentCountries = state.countries.filter(country => country.continent === action.name);\n            return Object.assign({}, state, {visibleCountries: continentCountries});\n        \n        default:\n            return state;\n    }\n    // return state;\n};\n\nexport default countriesReducer;"]},"metadata":{},"sourceType":"module"}